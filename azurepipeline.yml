trigger: 
 - master

pool:
   vmImage: 'ubuntu-latest'

steps: 
- task: GoTool@0
  displayName: 'Set up the Go workspace'
  inputs:
    version: '1.12.14'
    goPath: '$(system.DefaultWorkingDirectory)/gopath'
    goBin: '$(system.DefaultWorkingDirectory)/gopath/bin'

- task: Go@0
  displayName: 'Get dependencies'
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: Go@0
  displayName: 'Get test tools'
  inputs:
    command: 'get'
    arguments: '-v github.com/jstemmer/go-junit-report github.com/axw/gocov/gocov github.com/AlekSi/gocov-xml github.com/matm/gocov-html'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: Bash@3
  displayName: 'Run test'
  inputs:
    targetType: 'inline'
    script: |
      go test -v -coverprofile=coverage.txt ./... 2>&1 | $(system.DefaultWorkingDirectory)/gopath/bin/go-junit-report > report.xml
      $(system.DefaultWorkingDirectory)/gopath/bin/gocov convert coverage.txt > coverage.json
      $(system.DefaultWorkingDirectory)/gopath/bin/gocov-xml < coverage.json > coverage.xml
      mkdir coverage
      $(system.DefaultWorkingDirectory)/gopath/bin/gocov-html < coverage.json > coverage/index.html

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/report.xml'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

- task: Go@0
  displayName: 'Build APP'
  inputs:
    command: 'build'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: CopyFiles@2
  inputs:
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
     artifactName: drop
