# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go
pool:
   vmImage: 'ubuntu-latest'

variables:
  GOBIN: '$(GOPATH)/bin' # Go binaries path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

trigger: 
 - master
 - dev

steps: 
- task: GoTool@0
  inputs:
    version: '1.12.14'

- task: Go@0
  displayName: 'install dependencies'
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: CmdLine@2
  inputs:
    script: |
      go get github.com/jstemmer/go-junit-report
      go get github.com/axw/gocov/gocov
      go get github.com/AlekSi/gocov-xml
      go get -u gopkg.in/matm/v1/gocov-html
      go test -v -coverprofile=coverage.txt ./... 2>&1 | go-junit-report > report.xml
      gocov convert coverage.txt > coverage.json
      gocov-xml < coverage.json > coverage.xml
      mkdir coverage
      gocov-html < coverage.json > coverage/index.html

- task: PublishTestResults@2
  inputs:
    testRunner: JUnit
    testResultsFiles: $(System.DefaultWorkingDirectory)/report.xml

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage.xml
    reportDirectory: $(System.DefaultWorkingDirectory)/coverage

- task: Go@0
  displayName: 'build app'
  inputs:
    command: 'build'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: CopyFiles@2
  inputs:
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
     artifactName: drop
        go build -v .